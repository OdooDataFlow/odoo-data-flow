#!/usr/bin/env python3\n# Test script to verify UTF-8 sanitization in export_threaded.\n\nimport sys\nimport os\n\n# Add the src directory to the path so we can import the module\nsys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))\n\nfrom odoo_data_flow.export_threaded import _sanitize_utf8_string\n\ndef test_utf8_sanitization():\n    # Test UTF-8 sanitization with various inputs.\n    print(\"Testing UTF-8 sanitization...\")\n    \n    # Test cases that might cause issues\n    test_cases = [\n        # Normal strings\n        (\"Normal product name\", \"Normal product name\"),\n        (\"\", \"\"),\n        (None, \"\"),\n        (123, \"123\"),\n        (12.34, \"12.34\"),\n        (True, \"True\"),\n        \n        # Strings with problematic characters\n        (\"Product with \\x9d invalid char\", None),  # This should be sanitized\n        (\"Product with \\x00\\x01\\x02 control chars\", None),  # This should be sanitized\n        \n        # Unicode strings\n        (\"Product with émojis 😀🚀⭐\", \"Product with émojis 😀🚀⭐\"),\n        (\"Product with accented chars: café résumé naïve\", \"Product with accented chars: café résumé naïve\"),\n    ]\n    \n    for i, (input_val, expected) in enumerate(test_cases):\n        try:\n            result = _sanitize_utf8_string(input_val)\n            print(f\"Test {i+1}: Input: {repr(input_val)} -> Output: {repr(result)}\")\n            \n            # Should be valid UTF-8\n            result.encode('utf-8')\n            print(f\"  ✓ Valid UTF-8\")\n            \n            if expected is not None and result != expected:\n                print(f\"  ⚠ Expected: {repr(expected)}, Got: {repr(result)}\")\n            \n        except Exception as e:\n            print(f\"Test {i+1}: Input: {repr(input_val)} -> ERROR: {e}\")\n            return False\n    \n    print(\"\\nAll tests passed!\")\n    return True\n\nif __name__ == \"__main__\":\n    success = test_utf8_sanitization()\n    sys.exit(0 if success else 1)\n